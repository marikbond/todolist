[+] - Написать код, чтобы получить список статусов из БД // write sql request to receive statuses list from data base
[+] - Вставить этот список в разметку // insert received list into html
[ ] - Написать запрос в БД который будет добавлять данные // write sql request that is adding data into data base
[ ] - На кнопку  save добавить обработчик, который соберет данные в полях и из дропдауна. // add an handler for save button that will take data from the fields and dropdown
[ ] - Отправить POST запрос на сервер с данными // send POST request with data to server
[ ] - Получить данные на сервере // receive data in server
[ ] - На основании полученный данных с формы сформировать запрос на добавление задачи в БД // add data to data base
[ ] - Если вставка произошла успешно - отрендерить задачу на сервере и отправить полученный html для вставки задачи на клиенте // if insert into data base went succesfully render new task on server and send html to client
[ ] - Получить ответ от сервера с новой задачей  в виде html и вставить на странице // receive server response on client with new task and insert it into the page

[+] - На кнопку search повесить обработчик, который будет получать строку запроса с формы;
[ ] - Подменять URL согласно результату поиска на странице; HistoryAPI
[+] - Отправить запрос через ajax на сервер для поиска задач отвечающим запросу;
[+] - Создать новй mapping для нового URL. /search?q=<query-string>, поулчить строку запроса и передать в taskAPI.find;
[+] - Написать запрос в БД для поиска задач по заголовку на основании строки поиска;
[+] - Получить данные из БД по стороне NodeJS, создать объекты Task и передать массив с задачами в callback для taskAPI.find;
[+] - Отрендерить новый html на основании полученных задач и отправить клиенту;
[+] - Получить задачи со стороны клиента и подменить на странице старые задачи на новые.